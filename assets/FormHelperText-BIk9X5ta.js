import{j as l}from"./jsx-runtime-4WDyTGeM.js";import{c as t}from"./index-eOQoo3sK.js";import{F as s}from"./FormHelperText-h5eDLKOl.js";const a=({className:e,...r})=>l.jsx(s,{className:t("FormHelperText",e),...r});try{a.displayName="FormHelperText",a.__docgenInfo={description:"",displayName:"FormHelperText",props:{className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},style:{defaultValue:null,description:"",name:"style",required:!1,type:{name:"CSSProperties"}},classes:{defaultValue:null,description:"Override or extend the styles applied to the component.",name:"classes",required:!1,type:{name:"(Partial<FormHelperTextClasses> & Partial<ClassNameMap<never>>)"}},children:{defaultValue:null,description:"The content of the component.\n\nIf `' '` is provided, the component reserves one line height for displaying a future message.",name:"children",required:!1,type:{name:"ReactNode"}},ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"((instance: HTMLParagraphElement | null) => void) | RefObject<HTMLParagraphElement> | null"}},component:{defaultValue:null,description:"",name:"component",required:!1,type:{name:"ElementType<any, keyof IntrinsicElements>"}},disabled:{defaultValue:null,description:"If `true`, the helper text should be displayed in a disabled state.",name:"disabled",required:!1,type:{name:"boolean"}},required:{defaultValue:null,description:"If `true`, the helper text should use required classes key.",name:"required",required:!1,type:{name:"boolean"}},error:{defaultValue:null,description:"If `true`, helper text should be displayed in an error state.",name:"error",required:!1,type:{name:"boolean"}},focused:{defaultValue:null,description:"If `true`, the helper text should use focused classes key.",name:"focused",required:!1,type:{name:"boolean"}}}}}catch{}export{a as F};
