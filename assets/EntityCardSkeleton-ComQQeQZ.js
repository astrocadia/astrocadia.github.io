import{j as t}from"./jsx-runtime-4WDyTGeM.js";import{c as f}from"./index-eOQoo3sK.js";import{C as j}from"./Card-sUXJUunV.js";import{a as c,_ as R}from"./ThemeProviderWrapper-Be5RUURM.js";import{r as M}from"./index-Dl6G-zuu.js";import{b as I,c as S,s as h,u as k,e as L,f as w}from"./styled-Dt2_JBRt.js";import{T as y}from"./Typography-8CCtzQ9L.js";import{S as v}from"./Skeleton-CFd2Vw-J.js";function A(e){return S("MuiCardHeader",e)}const T=I("MuiCardHeader",["root","avatar","action","content","title","subheader"]),B=["action","avatar","className","component","disableTypography","subheader","subheaderTypographyProps","title","titleTypographyProps"],D=e=>{const{classes:a}=e;return w({root:["root"],avatar:["avatar"],action:["action"],content:["content"],title:["title"],subheader:["subheader"]},A,a)},O=h("div",{name:"MuiCardHeader",slot:"Root",overridesResolver:(e,a)=>c({[`& .${T.title}`]:a.title,[`& .${T.subheader}`]:a.subheader},a.root)})({display:"flex",alignItems:"center",padding:16}),U=h("div",{name:"MuiCardHeader",slot:"Avatar",overridesResolver:(e,a)=>a.avatar})({display:"flex",flex:"0 0 auto",marginRight:16}),$=h("div",{name:"MuiCardHeader",slot:"Action",overridesResolver:(e,a)=>a.action})({flex:"0 0 auto",alignSelf:"flex-start",marginTop:-4,marginRight:-8,marginBottom:-4}),F=h("div",{name:"MuiCardHeader",slot:"Content",overridesResolver:(e,a)=>a.content})({flex:"1 1 auto"}),W=M.forwardRef(function(a,r){const s=k({props:a,name:"MuiCardHeader"}),{action:u,avatar:n,className:g,component:m="div",disableTypography:l=!1,subheader:x,subheaderTypographyProps:E,title:P,titleTypographyProps:q}=s,V=R(s,B),d=c({},s,{component:m,disableTypography:l}),o=D(d);let i=P;i!=null&&i.type!==y&&!l&&(i=t.jsx(y,c({variant:n?"body2":"h5",className:o.title,component:"span",display:"block"},q,{children:i})));let p=x;return p!=null&&p.type!==y&&!l&&(p=t.jsx(y,c({variant:n?"body2":"body1",className:o.subheader,color:"text.secondary",component:"span",display:"block"},E,{children:p}))),t.jsxs(O,c({className:L(o.root,g),as:m,ref:r,ownerState:d},V,{children:[n&&t.jsx(U,{className:o.avatar,ownerState:d,children:n}),t.jsxs(F,{className:o.content,ownerState:d,children:[i,p]}),u&&t.jsx($,{className:o.action,ownerState:d,children:u})]}))}),C=({className:e,imageProps:a,...r})=>t.jsx("div",{className:f("EntityCardBanner",e),...r,children:!!a&&t.jsx("img",{alt:a.alt,...a})});try{C.displayName="EntityCardBanner",C.__docgenInfo={description:"",displayName:"EntityCardBanner",props:{imageProps:{defaultValue:null,description:"",name:"imageProps",required:!1,type:{name:"ImgHTMLAttributes<HTMLImageElement>"}}}}}catch{}const _=e=>t.jsx(W,{disableTypography:!0,...e});try{_.displayName="CardHeader",_.__docgenInfo={description:"",displayName:"CardHeader",props:{className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},style:{defaultValue:null,description:"",name:"style",required:!1,type:{name:"CSSProperties"}},ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"((instance: HTMLDivElement | null) => void) | RefObject<HTMLDivElement> | null"}},title:{defaultValue:null,description:"The content of the component.",name:"title",required:!1,type:{name:"ReactNode"}},classes:{defaultValue:null,description:"Override or extend the styles applied to the component.",name:"classes",required:!1,type:{name:"(Partial<CardHeaderClasses> & Partial<ClassNameMap<never>>)"}},action:{defaultValue:null,description:"The action to display in the card header.",name:"action",required:!1,type:{name:"ReactNode"}},avatar:{defaultValue:null,description:"The Avatar element to display.",name:"avatar",required:!1,type:{name:"ReactNode"}},subheader:{defaultValue:null,description:"The content of the component.",name:"subheader",required:!1,type:{name:"ReactNode"}},subheaderTypographyProps:{defaultValue:null,description:"These props will be forwarded to the subheader\n(as long as disableTypography is not `true`).",name:"subheaderTypographyProps",required:!1,type:{name:'TypographyProps<"span", { component?: "span"; }>'}},titleTypographyProps:{defaultValue:null,description:"These props will be forwarded to the title\n(as long as disableTypography is not `true`).",name:"titleTypographyProps",required:!1,type:{name:'TypographyProps<"span", { component?: "span"; }>'}}}}}catch{}const b=({className:e,Icon:a,label:r,...s})=>t.jsx(_,{className:f("EntityCardHeader",e),title:t.jsxs(t.Fragment,{children:[t.jsx("span",{className:"EntityCardHeader__title",children:r}),a]}),...s});try{b.displayName="EntityCardHeader",b.__docgenInfo={description:"",displayName:"EntityCardHeader",props:{Icon:{defaultValue:null,description:"",name:"Icon",required:!0,type:{name:"ReactNode"}},label:{defaultValue:null,description:"",name:"label",required:!0,type:{name:"string"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},style:{defaultValue:null,description:"",name:"style",required:!1,type:{name:"CSSProperties"}},ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"((instance: HTMLDivElement | null) => void) | RefObject<HTMLDivElement> | null"}},title:{defaultValue:null,description:"The content of the component.",name:"title",required:!1,type:{name:"ReactNode"}},classes:{defaultValue:null,description:"Override or extend the styles applied to the component.",name:"classes",required:!1,type:{name:"(Partial<CardHeaderClasses> & Partial<ClassNameMap<never>>)"}},action:{defaultValue:null,description:"The action to display in the card header.",name:"action",required:!1,type:{name:"ReactNode"}},avatar:{defaultValue:null,description:"The Avatar element to display.",name:"avatar",required:!1,type:{name:"ReactNode"}},subheader:{defaultValue:null,description:"The content of the component.",name:"subheader",required:!1,type:{name:"ReactNode"}},subheaderTypographyProps:{defaultValue:null,description:"These props will be forwarded to the subheader\n(as long as disableTypography is not `true`).",name:"subheaderTypographyProps",required:!1,type:{name:'TypographyProps<"span", { component?: "span"; }>'}},titleTypographyProps:{defaultValue:null,description:"These props will be forwarded to the title\n(as long as disableTypography is not `true`).",name:"titleTypographyProps",required:!1,type:{name:'TypographyProps<"span", { component?: "span"; }>'}}}}}catch{}const N=({className:e,children:a,bannerImageProps:r,CardBannerProps:s={},CardHeaderIcon:u,CardHeaderProps:n={},label:g,selected:m,onClick:l})=>t.jsxs(j,{className:f("EntityCard",e,{EntityCard__clickable:!!l,EntityCard__selected:m}),onClick:l,tabIndex:0,children:[t.jsx(C,{imageProps:r,...s}),t.jsxs("div",{className:"EntityCard__content",children:[t.jsx(b,{Icon:u,label:g,...n}),a]})]});try{N.displayName="EntityCard",N.__docgenInfo={description:"",displayName:"EntityCard",props:{className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},bannerImageProps:{defaultValue:null,description:"",name:"bannerImageProps",required:!1,type:{name:"ImgHTMLAttributes<HTMLImageElement>"}},CardBannerProps:{defaultValue:{value:"{}"},description:"",name:"CardBannerProps",required:!1,type:{name:"HTMLAttributes<HTMLDivElement>"}},CardHeaderIcon:{defaultValue:null,description:"",name:"CardHeaderIcon",required:!1,type:{name:"ReactNode"}},CardHeaderProps:{defaultValue:{value:"{}"},description:"",name:"CardHeaderProps",required:!1,type:{name:"CardHeaderProps"}},selected:{defaultValue:null,description:"",name:"selected",required:!1,type:{name:"boolean"}},onClick:{defaultValue:null,description:"",name:"onClick",required:!1,type:{name:"MouseEventHandler<HTMLDivElement>"}},label:{defaultValue:null,description:"",name:"label",required:!0,type:{name:"string"}}}}}catch{}const H=({className:e,children:a})=>t.jsxs("div",{className:f("EntityCardSkeleton",e),children:[t.jsx(v,{className:"EntityCardSkeleton__banner",variant:"rectangular"}),t.jsxs("div",{className:"EntityCardSkeleton__content",children:[t.jsx("div",{className:"EntityCardSkeleton__header",children:t.jsx(v,{className:"EntityCardSkeleton__headerText",variant:"rounded"})}),a]})]});try{H.displayName="EntityCardSkeleton",H.__docgenInfo={description:"",displayName:"EntityCardSkeleton",props:{className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}}}}}catch{}export{H as E,N as a,C as b};
