import{j as a}from"./jsx-runtime-4WDyTGeM.js";import{c as m}from"./index-eOQoo3sK.js";import{C as f}from"./Chip-Dz4tqHkS.js";import{L as h,a as y}from"./ListItem-DL2UJvRw.js";function o({className:s,label:l,items:t,changeImportance:c="accept",onChange:d,isValid:r,...u}){if(!t||t.length===0)return null;const p=t.map(({getValue:e,...n})=>{const i=e({isValid:r});return{...n,label:n.label,onClick:()=>{d(i,c,n)},disabled:!r(i)}});return a.jsxs(h,{className:m("PickerShortcuts",s),...u,children:[l&&a.jsx("span",{className:"PickerShortcuts__label",children:l}),p.map(e=>a.jsx(y,{className:"PickerShortcuts__listItem",children:a.jsx(f,{className:"PickerShortcuts__chip",size:"small",...e})},e.label))]})}try{o.displayName="PickersShortcuts",o.__docgenInfo={description:"",displayName:"PickersShortcuts",props:{label:{defaultValue:null,description:"",name:"label",required:!1,type:{name:"string"}},children:{defaultValue:null,description:"The content of the component.",name:"children",required:!1,type:{name:"ReactNode"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},style:{defaultValue:null,description:"",name:"style",required:!1,type:{name:"CSSProperties"}},ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"((instance: HTMLUListElement | null) => void) | RefObject<HTMLUListElement> | null"}},onChange:{defaultValue:null,description:"",name:"onChange",required:!0,type:{name:"(newValue: T, changeImportance?: PickerShortcutChangeImportance | undefined, shortcut?: PickersShortcutsItemContext | undefined) => void"}},classes:{defaultValue:null,description:"Override or extend the styles applied to the component.",name:"classes",required:!1,type:{name:"(Partial<ListClasses> & Partial<ClassNameMap<never>>)"}},sx:{defaultValue:null,description:"The system prop that allows defining system overrides as well as additional CSS styles.",name:"sx",required:!1,type:{name:"SxProps<Theme>"}},component:{defaultValue:null,description:"",name:"component",required:!1,type:{name:"ElementType<any, keyof IntrinsicElements>"}},subheader:{defaultValue:null,description:"The content of the subheader, normally `ListSubheader`.",name:"subheader",required:!1,type:{name:"ReactNode"}},dense:{defaultValue:{value:"false"},description:"If `true`, compact vertical padding designed for keyboard and mouse input is used for\nthe list and list items.\nThe prop is available to descendant components as the `dense` context.",name:"dense",required:!1,type:{name:"boolean"}},disablePadding:{defaultValue:{value:"false"},description:"If `true`, vertical padding is removed from the list.",name:"disablePadding",required:!1,type:{name:"boolean"}},isValid:{defaultValue:null,description:"",name:"isValid",required:!0,type:{name:"(value: T) => boolean"}},items:{defaultValue:{value:"`[]`"},description:`Ordered array of shortcuts to display.
If empty, does not display the shortcuts.`,name:"items",required:!1,type:{name:"PickersShortcutsItem<T>[]"}},changeImportance:{defaultValue:{value:"accept"},description:'Importance of the change when picking a shortcut:\n- "accept": fires `onChange`, fires `onAccept` and closes the picker.\n- "set": fires `onChange` but do not fire `onAccept` and does not close the picker.',name:"changeImportance",required:!1,type:{name:"enum",value:[{value:'"set"'},{value:'"accept"'}]}}}}}catch{}export{o as P};
