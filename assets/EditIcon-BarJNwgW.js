import{j as n}from"./jsx-runtime-4WDyTGeM.js";import{S as a}from"./SvgIcon-DgPANJTo.js";const o=n.jsx("path",{d:"M5.18799 14.1631H6.25049L12.063 8.35059L11.5213 7.78809L11.0005 7.28809L5.18799 13.1006V14.1631ZM4.44178 15.6631C4.23092 15.6631 4.05257 15.5916 3.90674 15.4486C3.7609 15.3055 3.68799 15.1283 3.68799 14.9169V13.1074C3.68799 12.9084 3.72271 12.7186 3.79215 12.5381C3.8616 12.3575 3.97271 12.1909 4.12549 12.0381L12.063 4.10059C12.2158 3.94781 12.3829 3.8367 12.5643 3.76725C12.7458 3.69781 12.9333 3.66309 13.1268 3.66309C13.3204 3.66309 13.5074 3.69781 13.688 3.76725C13.8685 3.8367 14.0359 3.9474 14.1902 4.09936L15.2505 5.16309C15.4033 5.31586 15.5144 5.48288 15.5838 5.66413C15.6533 5.84538 15.688 6.036 15.688 6.236C15.688 6.4235 15.6531 6.60902 15.5834 6.79254C15.5136 6.97609 15.4027 7.14127 15.2505 7.28809L7.31299 15.2256C7.16021 15.3784 6.99389 15.4895 6.81403 15.5589C6.63418 15.6284 6.44502 15.6631 6.24655 15.6631H4.44178ZM12.063 8.35059L11.5213 7.78809L11.0005 7.28809L12.063 8.35059Z"}),e=t=>n.jsx(a,{...t,children:o});e.muiName="EditIcon";try{e.displayName="EditIcon",e.__docgenInfo={description:"",displayName:"EditIcon",props:{component:{defaultValue:null,description:`The component used for the root node.
Either a string to use a HTML element or a component.`,name:"component",required:!0,type:{name:"ElementType<any, keyof IntrinsicElements>"}},children:{defaultValue:null,description:"Node passed into the SVG element.",name:"children",required:!1,type:{name:"ReactNode"}},classes:{defaultValue:null,description:"Override or extend the styles applied to the component.",name:"classes",required:!1,type:{name:"(Partial<SvgIconClasses> & Partial<ClassNameMap<never>>)"}},color:{defaultValue:{value:"'inherit'"},description:`The color of the component.
It supports both default and custom theme colors, which can be added as shown in the
[palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
You can use the \`htmlColor\` prop to apply a color attribute to the SVG element.`,name:"color",required:!1,type:{name:"enum",value:[{value:'"disabled"'},{value:'"action"'},{value:'"inherit"'},{value:'"error"'},{value:'"primary"'},{value:'"secondary"'},{value:'"info"'},{value:'"success"'},{value:'"warning"'}]}},fontSize:{defaultValue:{value:"'medium'"},description:"The fontSize applied to the icon. Defaults to 24px, but can be configure to inherit font size.",name:"fontSize",required:!1,type:{name:"enum",value:[{value:'"small"'},{value:'"inherit"'},{value:'"medium"'},{value:'"large"'}]}},htmlColor:{defaultValue:null,description:"Applies a color attribute to the SVG element.",name:"htmlColor",required:!1,type:{name:"string"}},inheritViewBox:{defaultValue:{value:"false"},description:"If `true`, the root node will inherit the custom `component`'s viewBox and the `viewBox`\nprop will be ignored.\nUseful when you want to reference a custom `component` and have `SvgIcon` pass that\n`component`'s viewBox to the root node.",name:"inheritViewBox",required:!1,type:{name:"boolean"}},shapeRendering:{defaultValue:null,description:`The shape-rendering attribute. The behavior of the different options is described on the
[MDN Web Docs](https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering).
If you are having issues with blurry icons you should investigate this prop.`,name:"shapeRendering",required:!1,type:{name:"string"}},sx:{defaultValue:null,description:"The system prop that allows defining system overrides as well as additional CSS styles.",name:"sx",required:!1,type:{name:"SxProps<Theme>"}},titleAccess:{defaultValue:null,description:`Provides a human-readable title for the element that contains it.
https://www.w3.org/TR/SVG-access/#Equivalent`,name:"titleAccess",required:!1,type:{name:"string"}},viewBox:{defaultValue:{value:"'0 0 24 24'"},description:`Allows you to redefine what the coordinates without units mean inside an SVG element.
For example, if the SVG element is 500 (width) by 200 (height),
and you pass viewBox="0 0 50 20",
this means that the coordinates inside the SVG will go from the top left corner (0,0)
to bottom right (50,20) and each unit will be worth 10px.`,name:"viewBox",required:!1,type:{name:"string"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},style:{defaultValue:null,description:"",name:"style",required:!1,type:{name:"CSSProperties"}}}}}catch{}export{e as E};
