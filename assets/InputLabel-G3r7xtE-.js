import{j as n}from"./jsx-runtime-4WDyTGeM.js";import{c as t}from"./index-eOQoo3sK.js";import{I as s}from"./InputLabel-B0NhuLFQ.js";const l=({className:e,...a})=>n.jsx(s,{className:t("InputLabel",e),disableAnimation:!0,...a});try{l.displayName="InputLabel",l.__docgenInfo={description:"",displayName:"InputLabel",props:{className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},style:{defaultValue:null,description:"",name:"style",required:!1,type:{name:"CSSProperties"}},classes:{defaultValue:null,description:"Override or extend the styles applied to the component.",name:"classes",required:!1,type:{name:"(Partial<InputLabelClasses> & Partial<ClassNameMap<never>>)"}},ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"((instance: HTMLLabelElement | null) => void) | RefObject<HTMLLabelElement> | null"}},component:{defaultValue:null,description:"",name:"component",required:!1,type:{name:"ElementType<any, keyof IntrinsicElements>"}},disabled:{defaultValue:null,description:"If `true`, the component is disabled.",name:"disabled",required:!1,type:{name:"boolean"}},required:{defaultValue:null,description:"if `true`, the label will indicate that the `input` is required.",name:"required",required:!1,type:{name:"boolean"}},size:{defaultValue:{value:"'normal'"},description:"The size of the component.",name:"size",required:!1,type:{name:"enum",value:[{value:'"small"'},{value:'"normal"'}]}},filled:{defaultValue:null,description:"If `true`, the label should use filled classes key.",name:"filled",required:!1,type:{name:"boolean"}},error:{defaultValue:null,description:"If `true`, the label is displayed in an error state.",name:"error",required:!1,type:{name:"boolean"}},focused:{defaultValue:null,description:"If `true`, the `input` of this label is focused.",name:"focused",required:!1,type:{name:"boolean"}},shrink:{defaultValue:null,description:"If `true`, the label is shrunk.",name:"shrink",required:!1,type:{name:"boolean"}}}}}catch{}export{l as I};
