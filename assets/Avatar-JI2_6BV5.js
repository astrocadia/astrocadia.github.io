import{j as d}from"./jsx-runtime-4WDyTGeM.js";import{c as M}from"./index-eOQoo3sK.js";import{b as l,_ as V}from"./ThemeProviderWrapper-uQhE3vfQ.js";import{r as g}from"./index-Dl6G-zuu.js";import{a as N,b as R,s as v,e as C,f as j}from"./styled-DaAyEikA.js";import{c as E}from"./index-CmspVeCA.js";import{c as _}from"./createSvgIcon-DWxpDd4T.js";import{u as L}from"./useSlot-19y32CJk.js";const U=_(d.jsx("path",{d:"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z"}),"Person");function z(e){return R("MuiAvatar",e)}N("MuiAvatar",["root","colorDefault","circular","rounded","square","img","fallback"]);const D=["alt","children","className","component","slots","slotProps","imgProps","sizes","src","srcSet","variant"],H=E(),F=e=>{const{classes:t,variant:a,colorDefault:r}=e;return j({root:["root",a,r&&"colorDefault"],img:["img"],fallback:["fallback"]},z,t)},O=v("div",{name:"MuiAvatar",slot:"Root",overridesResolver:(e,t)=>{const{ownerState:a}=e;return[t.root,t[a.variant],a.colorDefault&&t.colorDefault]}})(({theme:e})=>({position:"relative",display:"flex",alignItems:"center",justifyContent:"center",flexShrink:0,width:40,height:40,fontFamily:e.typography.fontFamily,fontSize:e.typography.pxToRem(20),lineHeight:1,borderRadius:"50%",overflow:"hidden",userSelect:"none",variants:[{props:{variant:"rounded"},style:{borderRadius:(e.vars||e).shape.borderRadius}},{props:{variant:"square"},style:{borderRadius:0}},{props:{colorDefault:!0},style:l({color:(e.vars||e).palette.background.default},e.vars?{backgroundColor:e.vars.palette.Avatar.defaultBg}:l({backgroundColor:e.palette.grey[400]},e.applyStyles("dark",{backgroundColor:e.palette.grey[600]})))}]})),W=v("img",{name:"MuiAvatar",slot:"Img",overridesResolver:(e,t)=>t.img})({width:"100%",height:"100%",textAlign:"center",objectFit:"cover",color:"transparent",textIndent:1e4}),B=v(U,{name:"MuiAvatar",slot:"Fallback",overridesResolver:(e,t)=>t.fallback})({width:"75%",height:"75%"});function $({crossOrigin:e,referrerPolicy:t,src:a,srcSet:r}){const[n,o]=g.useState(!1);return g.useEffect(()=>{if(!a&&!r)return;o(!1);let i=!0;const s=new Image;return s.onload=()=>{i&&o("loaded")},s.onerror=()=>{i&&o("error")},s.crossOrigin=e,s.referrerPolicy=t,s.src=a,r&&(s.srcset=r),()=>{i=!1}},[e,t,a,r]),n}const G=g.forwardRef(function(t,a){const r=H({props:t,name:"MuiAvatar"}),{alt:n,children:o,className:i,component:s="div",slots:P={},slotProps:x={},imgProps:y,sizes:T,src:m,srcSet:p,variant:S="circular"}=r,q=V(r,D);let c=null;const I=$(l({},y,{src:m,srcSet:p})),h=m||p,b=h&&I!=="error",u=l({},r,{colorDefault:!b,component:s,variant:S}),f=F(u),[k,w]=L("img",{className:f.img,elementType:W,externalForwardedProps:{slots:P,slotProps:{img:l({},y,x.img)}},additionalProps:{alt:n,src:m,srcSet:p,sizes:T},ownerState:u});return b?c=d.jsx(k,l({},w)):o||o===0?c=o:h&&n?c=n[0]:c=d.jsx(B,{ownerState:u,className:f.fallback}),d.jsx(O,l({as:s,ownerState:u,className:C(f.root,i),ref:a},q,{children:c}))}),A=({className:e,...t})=>d.jsx(G,{className:M("Avatar",e),...t});try{A.displayName="Avatar",A.__docgenInfo={description:"",displayName:"Avatar",props:{alt:{defaultValue:null,description:"Used in combination with `src` or `srcSet` to\nprovide an alt attribute for the rendered `img` element.",name:"alt",required:!1,type:{name:"string"}},children:{defaultValue:null,description:"Used to render icon or text elements inside the Avatar if `src` is not set.\nThis can be an element, or just a string.",name:"children",required:!1,type:{name:"ReactNode"}},classes:{defaultValue:null,description:"Override or extend the styles applied to the component.",name:"classes",required:!1,type:{name:"(Partial<AvatarClasses> & Partial<ClassNameMap<never>>)"}},imgProps:{defaultValue:null,description:"[Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#attributes) applied to the `img` element if the component is used to display an image.\nIt can be used to listen for the loading error event.\n@deprecated Use `slotProps.img` instead. This prop will be removed in v7. [How to migrate](/material-ui/migration/migrating-from-deprecated-apis/).",name:"imgProps",required:!1,type:{name:"(ImgHTMLAttributes<HTMLImageElement> & { sx?: SxProps<Theme>; })"}},sizes:{defaultValue:null,description:"The `sizes` attribute for the `img` element.",name:"sizes",required:!1,type:{name:"string"}},src:{defaultValue:null,description:"The `src` attribute for the `img` element.",name:"src",required:!1,type:{name:"string"}},srcSet:{defaultValue:null,description:"The `srcSet` attribute for the `img` element.\nUse this attribute for responsive image display.",name:"srcSet",required:!1,type:{name:"string"}},sx:{defaultValue:null,description:"The system prop that allows defining system overrides as well as additional CSS styles.",name:"sx",required:!1,type:{name:"SxProps<Theme>"}},variant:{defaultValue:{value:"'circular'"},description:"The shape of the avatar.",name:"variant",required:!1,type:{name:"enum",value:[{value:'"square"'},{value:'"circular"'},{value:'"rounded"'}]}},slots:{defaultValue:{value:"{}"},description:"The components used for each slot inside.",name:"slots",required:!1,type:{name:"AvatarSlots"}},slotProps:{defaultValue:{value:"{}"},description:"The props used for each slot inside.",name:"slotProps",required:!1,type:{name:"{ img?: SlotProps<ElementType<ImgHTMLAttributes<HTMLImageElement>, keyof IntrinsicElements>, {}, AvatarOwnProps>; }"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},style:{defaultValue:null,description:"",name:"style",required:!1,type:{name:"CSSProperties"}},ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"((instance: HTMLDivElement | null) => void) | RefObject<HTMLDivElement> | null"}},component:{defaultValue:null,description:"",name:"component",required:!1,type:{name:"ElementType<any, keyof IntrinsicElements>"}}}}}catch{}export{A};
