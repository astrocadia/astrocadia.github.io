import{b as r,g as s}from"./api-CCwLZuzR.js";const o={MANAGER:"manager",DEVELOPER:"developer",VIEWER:"viewer"},u=r.injectEndpoints({endpoints:t=>({getUser:t.query({query:()=>`${s("auth")}/auth/`,providesTags:["User"]}),validateResetToken:t.query({query:e=>({url:`${s("auth")}/auth/user/check-reset-password`,method:"POST",body:{resetUrlId:e.id,resetUrlEmail:e.email}}),transformResponse:e=>e.response==="success"}),createAccount:t.mutation({query:e=>({url:`${s("auth")}/auth/user/generic`,method:"POST",body:e})}),changePassword:t.mutation({query:e=>({url:`${s("auth")}/auth/user/change-password`,method:"POST",body:e})}),passwordResetRequest:t.mutation({query:({email:e})=>({url:`${s("auth")}/auth/user/reset-password`,method:"POST",body:{email:e,emailVersion:"v2"}})}),login:t.mutation({query:e=>({url:`${s("auth")}/auth/user/login`,method:"POST",body:e}),invalidatesTags:e=>e?["User"]:[]})})}),{useGetUserQuery:n,useLoginMutation:i,useValidateResetTokenQuery:h,useCreateAccountMutation:d,useChangePasswordMutation:c,usePasswordResetRequestMutation:m}=u;export{o as U,n as u};
