import{j as s}from"./jsx-runtime-4WDyTGeM.js";import{c as r}from"./index-eOQoo3sK.js";import{F as t}from"./FormLabel-B9PyWtWF.js";const l=({className:e,...a})=>s.jsx(t,{className:r("FormLabel",e),...a});try{l.displayName="FormLabel",l.__docgenInfo={description:"",displayName:"FormLabel",props:{classes:{defaultValue:null,description:"Override or extend the styles applied to the component.",name:"classes",required:!1,type:{name:"(Partial<FormLabelClasses> & Partial<ClassNameMap<never>>)"}},sx:{defaultValue:null,description:"The system prop that allows defining system overrides as well as additional CSS styles.",name:"sx",required:!1,type:{name:"SxProps<Theme>"}},ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"((instance: HTMLLabelElement | null) => void) | RefObject<HTMLLabelElement> | null"}},component:{defaultValue:null,description:"",name:"component",required:!1,type:{name:"ElementType<any, keyof IntrinsicElements>"}},disabled:{defaultValue:null,description:"If `true`, the label should be displayed in a disabled state.",name:"disabled",required:!1,type:{name:"boolean"}},filled:{defaultValue:null,description:"If `true`, the label should use filled classes key.",name:"filled",required:!1,type:{name:"boolean"}},error:{defaultValue:null,description:"If `true`, the label is displayed in an error state.",name:"error",required:!1,type:{name:"boolean"}},required:{defaultValue:null,description:"If `true`, the label will indicate that the `input` is required.",name:"required",required:!1,type:{name:"boolean"}},focused:{defaultValue:null,description:"If `true`, the input of this label is focused (used by `FormGroup` components).",name:"focused",required:!1,type:{name:"boolean"}}}}}catch{}export{l as F};
