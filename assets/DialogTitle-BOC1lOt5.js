import{j as n,r as ee}from"./jsx-runtime-4WDyTGeM.js";import{c as y}from"./index-eOQoo3sK.js";import{u as ae}from"./useMobileMediaQuery-DDszdcix.js";import{e as s,a as l,_ as E,i as oe}from"./ThemeProviderWrapper-Be5RUURM.js";import{r as c}from"./index-Dl6G-zuu.js";import{b as D,c as N,s as u,u as I,e as h,f as R}from"./styled-Dt2_JBRt.js";import{u as te}from"./useTheme-DLZNzqMo.js";import{B as ne,M as re}from"./Modal-PRNVlI3H.js";import{P as j}from"./Paper-Dxqu9lYo.js";import{u as le}from"./useId-BkqTTtmk.js";import{F as ie}from"./Fade-u7WpI_Fx.js";import{D as se}from"./DialogActions-b_8TWE7c.js";import{r as de}from"./createSvgIcon-CBDqugwZ.js";import{I as pe}from"./IconButton-DYHDsDKu.js";function ce(e){return N("MuiDialog",e)}const C=D("MuiDialog",["root","scrollPaper","scrollBody","container","paper","paperScrollPaper","paperScrollBody","paperWidthFalse","paperWidthXs","paperWidthSm","paperWidthMd","paperWidthLg","paperWidthXl","paperFullWidth","paperFullScreen"]),ue=c.createContext({}),me=["aria-describedby","aria-labelledby","BackdropComponent","BackdropProps","children","className","disableEscapeKeyDown","fullScreen","fullWidth","maxWidth","onBackdropClick","onClose","open","PaperComponent","PaperProps","scroll","TransitionComponent","transitionDuration","TransitionProps"],fe=u(ne,{name:"MuiDialog",slot:"Backdrop",overrides:(e,a)=>a.backdrop})({zIndex:-1}),he=e=>{const{classes:a,scroll:o,maxWidth:t,fullWidth:r,fullScreen:i}=e,d={root:["root"],container:["container",`scroll${s(o)}`],paper:["paper",`paperScroll${s(o)}`,`paperWidth${s(String(t))}`,r&&"paperFullWidth",i&&"paperFullScreen"]};return R(d,ce,a)},ye=u(re,{name:"MuiDialog",slot:"Root",overridesResolver:(e,a)=>a.root})({"@media print":{position:"absolute !important"}}),be=u("div",{name:"MuiDialog",slot:"Container",overridesResolver:(e,a)=>{const{ownerState:o}=e;return[a.container,a[`scroll${s(o.scroll)}`]]}})(({ownerState:e})=>l({height:"100%","@media print":{height:"auto"},outline:0},e.scroll==="paper"&&{display:"flex",justifyContent:"center",alignItems:"center"},e.scroll==="body"&&{overflowY:"auto",overflowX:"hidden",textAlign:"center","&::after":{content:'""',display:"inline-block",verticalAlign:"middle",height:"100%",width:"0"}})),ge=u(j,{name:"MuiDialog",slot:"Paper",overridesResolver:(e,a)=>{const{ownerState:o}=e;return[a.paper,a[`scrollPaper${s(o.scroll)}`],a[`paperWidth${s(String(o.maxWidth))}`],o.fullWidth&&a.paperFullWidth,o.fullScreen&&a.paperFullScreen]}})(({theme:e,ownerState:a})=>l({margin:32,position:"relative",overflowY:"auto","@media print":{overflowY:"visible",boxShadow:"none"}},a.scroll==="paper"&&{display:"flex",flexDirection:"column",maxHeight:"calc(100% - 64px)"},a.scroll==="body"&&{display:"inline-block",verticalAlign:"middle",textAlign:"left"},!a.maxWidth&&{maxWidth:"calc(100% - 64px)"},a.maxWidth==="xs"&&{maxWidth:e.breakpoints.unit==="px"?Math.max(e.breakpoints.values.xs,444):`max(${e.breakpoints.values.xs}${e.breakpoints.unit}, 444px)`,[`&.${C.paperScrollBody}`]:{[e.breakpoints.down(Math.max(e.breakpoints.values.xs,444)+32*2)]:{maxWidth:"calc(100% - 64px)"}}},a.maxWidth&&a.maxWidth!=="xs"&&{maxWidth:`${e.breakpoints.values[a.maxWidth]}${e.breakpoints.unit}`,[`&.${C.paperScrollBody}`]:{[e.breakpoints.down(e.breakpoints.values[a.maxWidth]+32*2)]:{maxWidth:"calc(100% - 64px)"}}},a.fullWidth&&{width:"calc(100% - 64px)"},a.fullScreen&&{margin:0,width:"100%",maxWidth:"100%",height:"100%",maxHeight:"none",borderRadius:0,[`&.${C.paperScrollBody}`]:{margin:0,maxWidth:"100%"}})),ve=c.forwardRef(function(a,o){const t=I({props:a,name:"MuiDialog"}),r=te(),i={enter:r.transitions.duration.enteringScreen,exit:r.transitions.duration.leavingScreen},{"aria-describedby":d,"aria-labelledby":m,BackdropComponent:b,BackdropProps:$,children:F,className:O,disableEscapeKeyDown:T=!1,fullScreen:U=!1,fullWidth:L=!1,maxWidth:H="sm",onBackdropClick:w,onClose:g,open:q,PaperComponent:Y=j,PaperProps:V={},scroll:z="paper",TransitionComponent:K=ie,transitionDuration:S=i,TransitionProps:X}=t,J=E(t,me),f=l({},t,{disableEscapeKeyDown:T,fullScreen:U,fullWidth:L,maxWidth:H,scroll:z}),v=he(f),x=c.useRef(),G=p=>{x.current=p.target===p.currentTarget},Q=p=>{x.current&&(x.current=null,w&&w(p),g&&g(p,"backdropClick"))},k=le(m),Z=c.useMemo(()=>({titleId:k}),[k]);return n.jsx(ye,l({className:h(v.root,O),closeAfterTransition:!0,components:{Backdrop:fe},componentsProps:{backdrop:l({transitionDuration:S,as:b},$)},disableEscapeKeyDown:T,onClose:g,open:q,ref:o,onClick:Q,ownerState:f},J,{children:n.jsx(K,l({appear:!0,in:q,timeout:S,role:"presentation"},X,{children:n.jsx(be,{className:h(v.container),onMouseDown:G,ownerState:f,children:n.jsx(ge,l({as:Y,elevation:24,role:"dialog","aria-describedby":d,"aria-labelledby":k},V,{className:h(v.paper,V.className),ownerState:f,children:n.jsx(ue.Provider,{value:Z,children:F})}))})}))}))});function xe(e){return N("MuiDialogContent",e)}D("MuiDialogContent",["root","dividers"]);const ke=D("MuiDialogTitle",["root"]),Ce=["className","dividers"],De=e=>{const{classes:a,dividers:o}=e;return R({root:["root",o&&"dividers"]},xe,a)},Pe=u("div",{name:"MuiDialogContent",slot:"Root",overridesResolver:(e,a)=>{const{ownerState:o}=e;return[a.root,o.dividers&&a.dividers]}})(({theme:e,ownerState:a})=>l({flex:"1 1 auto",WebkitOverflowScrolling:"touch",overflowY:"auto",padding:"20px 24px"},a.dividers?{padding:"16px 24px",borderTop:`1px solid ${(e.vars||e).palette.divider}`,borderBottom:`1px solid ${(e.vars||e).palette.divider}`}:{[`.${ke.root} + &`]:{paddingTop:0}})),Te=c.forwardRef(function(a,o){const t=I({props:a,name:"MuiDialogContent"}),{className:r,dividers:i=!1}=t,d=E(t,Ce),m=l({},t,{dividers:i}),b=De(m);return n.jsx(Pe,l({className:h(b.root,r),ownerState:m,ref:o},d))}),_=({className:e,fullScreen:a,PaperProps:o,...t})=>{const r=ae();return n.jsx(ve,{className:y("Dialog",e),fullScreen:a||r,PaperProps:{...o,elevation:0},...t})};try{_.displayName="Dialog",_.__docgenInfo={description:"",displayName:"Dialog",props:{PaperProps:{defaultValue:null,description:"",name:"PaperProps",required:!1,type:{name:'Omit<Partial<PaperProps<ElementType<any, keyof IntrinsicElements>>>, "elevation">'}},className:{defaultValue:null,description:"@ignore",name:"className",required:!1,type:{name:"string"}},classes:{defaultValue:null,description:"Override or extend the styles applied to the component.",name:"classes",required:!1,type:{name:"Partial<DialogClasses>"}},children:{defaultValue:null,description:"Dialog children, usually the included sub-components.",name:"children",required:!1,type:{name:"ReactNode"}},sx:{defaultValue:null,description:"The system prop that allows defining system overrides as well as additional CSS styles.",name:"sx",required:!1,type:{name:"SxProps<Theme>"}},ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"((instance: HTMLDivElement | null) => void) | RefObject<HTMLDivElement> | null"}},"aria-describedby":{defaultValue:null,description:"The id(s) of the element(s) that describe the dialog.",name:"aria-describedby",required:!1,type:{name:"string"}},"aria-labelledby":{defaultValue:null,description:"The id(s) of the element(s) that label the dialog.",name:"aria-labelledby",required:!1,type:{name:"string"}},component:{defaultValue:null,description:"",name:"component",required:!1,type:{name:"ElementType<any, keyof IntrinsicElements>"}},maxWidth:{defaultValue:{value:"'sm'"},description:"Determine the max-width of the dialog.\nThe dialog width grows with the size of the screen.\nSet to `false` to disable `maxWidth`.",name:"maxWidth",required:!1,type:{name:"false | Breakpoint"}},transitionDuration:{defaultValue:{value:`{
enter: theme.transitions.duration.enteringScreen,
exit: theme.transitions.duration.leavingScreen,
}`},description:`The duration for the transition, in milliseconds.
You may specify a single timeout for all transitions, or individually with an object.`,name:"transitionDuration",required:!1,type:{name:"number | { appear?: number; enter?: number; exit?: number | undefined; } | { appear?: number | undefined; enter?: number | undefined; exit?: number | undefined; } | undefined"}},container:{defaultValue:null,description:`An HTML element or function that returns one.
The \`container\` will have the portal children appended to it.

You can also provide a callback, which is called in a React layout effect.
This lets you set the container from a ref, and also makes server-side rendering possible.

By default, it uses the body of the top-level document object,
so it's simply \`document.body\` most of the time.`,name:"container",required:!1,type:{name:"Element | (() => Element | null) | null"}},components:{defaultValue:{value:"{}"},description:"The components used for each slot inside.\n\nThis prop is an alias for the `slots` prop.\nIt's recommended to use the `slots` prop instead.",name:"components",required:!1,type:{name:"{ Root?: ElementType<any, keyof IntrinsicElements>; Backdrop?: ElementType<any, keyof IntrinsicElements>; } | undefined"}},componentsProps:{defaultValue:{value:"{}"},description:"The extra props for the slot components.\nYou can override the existing props or add new ones.\n\nThis prop is an alias for the `slotProps` prop.\nIt's recommended to use the `slotProps` prop instead, as `componentsProps` will be deprecated in the future.",name:"componentsProps",required:!1,type:{name:'{ root?: SlotComponentProps<"div", ModalComponentsPropsOverrides, ModalOwnerState>; backdrop?: SlotComponentProps<...>; } | undefined'}},onClose:{defaultValue:null,description:'Callback fired when the component requests to be closed.\n@param event The event source of the callback.\n@param reason Can be: `"escapeKeyDown"`, `"backdropClick"`.',name:"onClose",required:!1,type:{name:'((event: {}, reason: "escapeKeyDown" | "backdropClick") => void)'}},open:{defaultValue:null,description:"If `true`, the component is shown.",name:"open",required:!0,type:{name:"boolean"}},slotProps:{defaultValue:{value:"{}"},description:"The props used for each slot inside the Modal.",name:"slotProps",required:!1,type:{name:'{ root?: SlotComponentProps<"div", ModalComponentsPropsOverrides, ModalOwnerState>; backdrop?: SlotComponentProps<...>; } | undefined'}},slots:{defaultValue:{value:"{}"},description:`The components used for each slot inside the Modal.
Either a string to use a HTML element or a component.`,name:"slots",required:!1,type:{name:"ModalSlots"}},TransitionComponent:{defaultValue:{value:"Fade"},description:`The component used for the transition.
[Follow this guide](/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.`,name:"TransitionComponent",required:!1,type:{name:"JSXElementConstructor<TransitionProps & { children: ReactElement<any, any>; }>"}},TransitionProps:{defaultValue:null,description:"Props applied to the transition element.\nBy default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition/) component.",name:"TransitionProps",required:!1,type:{name:"TransitionProps"}},fullWidth:{defaultValue:{value:"false"},description:"If `true`, the dialog stretches to `maxWidth`.\n\nNotice that the dialog width grow is limited by the default margin.",name:"fullWidth",required:!1,type:{name:"boolean"}},BackdropComponent:{defaultValue:{value:`styled(Backdrop, {
name: 'MuiModal',
slot: 'Backdrop',
overridesResolver: (props, styles) => {
return styles.backdrop;
},
})({
zIndex: -1,
})`},description:"A backdrop component. This prop enables custom backdrop rendering.\n@deprecated Use `slots.backdrop` instead. While this prop currently works, it will be removed in the next major version.\nUse the `slots.backdrop` prop to make your application ready for the next version of Material UI.",name:"BackdropComponent",required:!1,type:{name:"ElementType<BackdropProps, keyof IntrinsicElements>"}},BackdropProps:{defaultValue:null,description:"Props applied to the [`Backdrop`](/material-ui/api/backdrop/) element.\n@deprecated Use `slotProps.backdrop` instead.",name:"BackdropProps",required:!1,type:{name:"Partial<BackdropProps>"}},closeAfterTransition:{defaultValue:{value:"false"},description:"When set to true the Modal waits until a nested Transition is completed before closing.",name:"closeAfterTransition",required:!1,type:{name:"boolean"}},disableAutoFocus:{defaultValue:{value:"false"},description:"If `true`, the modal will not automatically shift focus to itself when it opens, and\nreplace it to the last focused element when it closes.\nThis also works correctly with any modal children that have the `disableAutoFocus` prop.\n\nGenerally this should never be set to `true` as it makes the modal less\naccessible to assistive technologies, like screen readers.",name:"disableAutoFocus",required:!1,type:{name:"boolean"}},disableEnforceFocus:{defaultValue:{value:"false"},description:"If `true`, the modal will not prevent focus from leaving the modal while open.\n\nGenerally this should never be set to `true` as it makes the modal less\naccessible to assistive technologies, like screen readers.",name:"disableEnforceFocus",required:!1,type:{name:"boolean"}},disableEscapeKeyDown:{defaultValue:{value:"false"},description:"If `true`, hitting escape will not fire the `onClose` callback.",name:"disableEscapeKeyDown",required:!1,type:{name:"boolean"}},disablePortal:{defaultValue:{value:"false"},description:"The `children` will be under the DOM hierarchy of the parent component.",name:"disablePortal",required:!1,type:{name:"boolean"}},disableRestoreFocus:{defaultValue:{value:"false"},description:"If `true`, the modal will not restore focus to previously focused element once\nmodal is hidden or unmounted.",name:"disableRestoreFocus",required:!1,type:{name:"boolean"}},disableScrollLock:{defaultValue:{value:"false"},description:"Disable the scroll lock behavior.",name:"disableScrollLock",required:!1,type:{name:"boolean"}},hideBackdrop:{defaultValue:{value:"false"},description:"If `true`, the backdrop is not rendered.",name:"hideBackdrop",required:!1,type:{name:"boolean"}},keepMounted:{defaultValue:{value:"false"},description:`Always keep the children in the DOM.
This prop can be useful in SEO situation or
when you want to maximize the responsiveness of the Modal.`,name:"keepMounted",required:!1,type:{name:"boolean"}},onBackdropClick:{defaultValue:null,description:"Callback fired when the backdrop is clicked.\n@deprecated Use the `onClose` prop with the `reason` argument to handle the `backdropClick` events.",name:"onBackdropClick",required:!1,type:{name:"ReactEventHandler<{}>"}},onTransitionEnter:{defaultValue:null,description:"A function called when a transition enters.",name:"onTransitionEnter",required:!1,type:{name:"(() => void)"}},onTransitionExited:{defaultValue:null,description:"A function called when a transition has exited.",name:"onTransitionExited",required:!1,type:{name:"(() => void)"}},fullScreen:{defaultValue:{value:"false"},description:"If `true`, the dialog is full-screen.",name:"fullScreen",required:!1,type:{name:"boolean"}},PaperComponent:{defaultValue:{value:"Paper"},description:"The component used to render the body of the dialog.",name:"PaperComponent",required:!1,type:{name:"JSXElementConstructor<PaperProps>"}},scroll:{defaultValue:{value:"'paper'"},description:"Determine the container for scrolling the dialog.",name:"scroll",required:!1,type:{name:"enum",value:[{value:'"body"'},{value:'"paper"'}]}}}}}catch{}const M=({className:e,...a})=>n.jsx(se,{className:y("DialogActions",e),...a});try{M.displayName="DialogActions",M.__docgenInfo={description:"",displayName:"DialogActions",props:{children:{defaultValue:null,description:"The content of the component.",name:"children",required:!1,type:{name:"ReactNode"}},classes:{defaultValue:null,description:"Override or extend the styles applied to the component.",name:"classes",required:!1,type:{name:"Partial<DialogActionsClasses>"}},sx:{defaultValue:null,description:"The system prop that allows defining system overrides as well as additional CSS styles.",name:"sx",required:!1,type:{name:"SxProps<Theme>"}},disableSpacing:{defaultValue:{value:"false"},description:"If `true`, the actions do not have additional margin.",name:"disableSpacing",required:!1,type:{name:"boolean"}},ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"Ref<unknown>"}}}}}catch{}const W=({className:e,...a})=>n.jsx(Te,{className:y("DialogContent",e),...a});try{W.displayName="DialogContent",W.__docgenInfo={description:"",displayName:"DialogContent",props:{children:{defaultValue:null,description:"The content of the component.",name:"children",required:!1,type:{name:"ReactNode"}},classes:{defaultValue:null,description:"Override or extend the styles applied to the component.",name:"classes",required:!1,type:{name:"Partial<DialogContentClasses>"}},dividers:{defaultValue:{value:"false"},description:"Display the top and bottom dividers.",name:"dividers",required:!1,type:{name:"boolean"}},sx:{defaultValue:null,description:"The system prop that allows defining system overrides as well as additional CSS styles.",name:"sx",required:!1,type:{name:"SxProps<Theme>"}},ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"Ref<unknown>"}}}}}catch{}var P={},we=oe;Object.defineProperty(P,"__esModule",{value:!0});var A=P.default=void 0,qe=we(de()),Ve=ee();A=P.default=(0,qe.default)((0,Ve.jsx)("path",{d:"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"}),"Close");const B=({className:e,id:a,onClose:o,title:t,subTitle:r,...i})=>n.jsxs("div",{id:a,className:y("DialogTitle",e),...i,children:[n.jsxs("div",{children:[t&&n.jsx("h2",{children:t}),t&&r&&n.jsx("h3",{children:r})]}),o&&n.jsx(pe,{className:"DialogTitle__closeButton","aria-label":"Close",variant:"ghost",onClick:o,children:n.jsx(A,{})})]});try{B.displayName="DialogTitle",B.__docgenInfo={description:"",displayName:"DialogTitle",props:{className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"",name:"id",required:!1,type:{name:"string"}},onClose:{defaultValue:null,description:"",name:"onClose",required:!1,type:{name:"(() => void)"}},title:{defaultValue:null,description:"",name:"title",required:!1,type:{name:"string"}},subTitle:{defaultValue:null,description:"",name:"subTitle",required:!1,type:{name:"string"}}}}}catch{}export{_ as D,B as a,W as b,M as c,ve as d,C as e,Te as f};
