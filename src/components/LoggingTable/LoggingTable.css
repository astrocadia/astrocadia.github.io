@import '../../styles/typography.css';

/* 
 * This is a table component that is used to display logs.
 * Should we ever need to use this table's styles outside of the logging page, I tried
 * to make the styles as extractible as I could by using the `Table...` classes
 * as much as possible.
 */
.LoggingTable {
  position: relative;
  
  .TableContainer {
    container-type: inline-size;
    container-name: table-container;
  }

  .TableCell__head {
    display: none;
  }

  .TableCell__body {
    padding: 0;
    border: none;
  }

  .LoggingTable__noData {
    display: flex;
    flex-direction: column;

    .Table {
      /* We don't want to show the table on mobile if we don't have data. */
      display: none;
    }

    @media (min-width: 800px) {
      .Table {
        display: table;
      }
    }
  }

  .LoggingTable__loading {
    /* Disabling scroll so we can pack table full of skeletons. */
    overflow-y: hidden;
  }

  .LoggingTable__errorMessage {
    display: flex;
    justify-content: center;
    align-items: center;
    flex-grow: 1;
    background-color: var(--background-workspace-color);
    font-size: var(--typescale-size-default-s);
    color: var(--typography-secondary-color);
  }

  .LoggingTable__logLevelHeaderCell,
  .LoggingTable__componentHeaderCell,
  .LoggingTable__timestampHeaderCell,
  .LoggingTable__messageHeaderCell {
    display: none;
  }

  .LoggingTable__logRow {
    display: grid;
    grid-template-columns: auto 1.75rem;
    grid-template-rows: repeat(3, auto);
    grid-template-areas:
      'message logLevel'
      'timestamp   .   '
      'component   .   ';
    column-gap: var(--standard-padding-xs);
    padding: var(--standard-padding-m);
    border-bottom: var(--table--border);

    &.LoggingTable__errorRow {
      background: rgb(var(--base-color-red-100-rgb-raw), 0.4);

      .LoggingTable__messageCell {
        color: var(--base-color-red-800);
      }
    }

    &:hover:not(.LoggingTableSkeletonRow) {
      background: rgb(var(--base-color-neutral-900-rgb-raw), 0.08);

      &.LoggingTable__errorRow {
        background: var(--base-color-red-100);
      }

      .CopyIconButton {
        display: inline;
        /* Negative margins are so we make the button smaller than line height. */
        margin-top: -0.6rem;
        margin-bottom: -0.4rem;
      }
    }

    .CopyIconButton {
      display: none;
    }
  }

  .LoggingTable__logLevelCell {
    grid-area: logLevel;

    .LoggingTable__logLevelWrapper {
      display: flex;
      justify-content: center;
      align-items: center;
      height: 1.75rem;
      width: 1.75rem;
    }

    .LoggingTable__logLevel {
      width: 1.75rem;
      height: 1.75rem;
    }

    .Badge {
      width: 1.75rem;
      height: 1.75rem;
    }
  }

  .LoggingTable__messageCell {
    grid-area: message;
    padding-bottom: var(--standard-padding-xs);
    overflow-x: auto;

    & pre {
      margin-top: 0;
      margin-bottom: 0;
      white-space: pre-wrap;
    }
  }

  .LoggingTable__timestampCell {
    grid-area: timestamp;
    color: var(--base-color-neutral-900);
  }

  .LoggingTable__componentCell {
    grid-area: component;

    .LoggingTable__componentBadge {
      display: none;
    }

    .LoggingTable__componentName {
      color: var(--base-color-neutral-900);
    }
  }

  .LoggingTable__fab {
    &.Fab {
      position: absolute;
      bottom: 1.25rem;
      right: 1.25rem;
      min-width: 2.5rem;
      padding: 0;
    }

    .LoggingTable__backToTopIcon {
      width: 1.25rem;
      height: 1.25rem;
    }

    .LoggingTable__backToTopLabel {
      display: none;
    }
  }

  @media (min-width: 800px) {
    .TableCell {
      font-size: var(--typescale-size-default-s);
    }

    .TableCell__head {
      display: table-cell;
      padding: var(--standard-padding-s);

      &:not(.LoggingTable__countHeaderCell) span {
        display: none;
      }
    }

    .TableCell__body {
      padding: 0.625rem var(--standard-padding-s);
    }

    .LoggingTable__logRow {
      display: table-row;

      .TableCell {
        &:first-of-type {
          padding-left: 1rem;
        }

        &:last-of-type {
          padding-right: 1rem;
        }
      }

      &:not(.LoggingTableSkeletonRow) {
        .TableCell {
          vertical-align: top;
        }
      }
    }

    .LoggingTable__logLevelHeaderCell {
      /* "padding left" + Icon Badge width + "padding right" (artificial padding) */
      width: calc(
        var(--standard-padding-m) + 1.75rem + var(--standard-padding-s)
      );
    }

    .LoggingTable__componentHeaderCell,
    .LoggingTable__timestampHeaderCell,
    .LoggingTable__countHeaderCell {
      /* (Container width - log level cell width) / 3 */
      width: calc(
        (
          100cqw -
            (var(--standard-padding-m) + 1.75rem + var(--standard-padding-s))
        ) / 3
      );
    }

    .LoggingTable__messageHeaderCell {
      /* Since the cell is initially invisible, we want to make it as small as possible
         so we don't break colspan */
      width: 0.0625rem;
    }

    .LoggingTable__timestampWrapper,
    .LoggingTable__messageWrapper {
      padding-top: 0.2813rem;
      padding-bottom: 0.2813rem;
    }

    .LoggingTable__messageCell,
    .LoggingTable__timestampCell {
      min-height: 1.75rem;
    }

    .LoggingTable__componentCell {
      .LoggingTable__componentBadge {
        display: block;

        .Badge {
          height: 1.75rem;
        }
      }

      .LoggingTable__componentName {
        display: none;
      }
    }

    .LoggingTable__messageCell {
      .LoggingTable__messageWrapper {
        display: flex;
        align-items: flex-start;
      }
    }

    .LoggingTable__fab {
      &.Fab {
        position: absolute;
        bottom: 2rem;
        right: 2rem;
        padding: 0 var(--standard-padding-m) 0 0.75rem;
        
        &:focus-visible {
          outline: 0.0625rem solid var(--base-color-neutral-500);
          outline-offset: 0.125rem;
        }
      }

      .LoggingTable__backToTopLabel {
        display: block;
      }
    }
  }

  @container table-container (min-width: 740px) {
    .TableCell__head {
      &:not(.LoggingTable__countHeaderCell) span {
        display: inline-block;
      }
    }

    .LoggingTable__messageHeaderCell {
      width: 4rem;
    }

    .LoggingTable__countHeaderCell {
      width: auto;
    }

    .LoggingTable__componentHeaderCell,
    .LoggingTable__timestampHeaderCell {
      width: calc(12.5rem + (var(--standard-padding-s) * 2));
    }
  }
}

.LoggingTable .LoggingTable__messageCell,
.LoggingTable .LoggingTable__timestampCell {
  @extend .caption-monospace;
}

@media (max-width: 800px) {
  .LoggingTable .LoggingTable__messageCell {
    @extend .body-1;
  }
  .LoggingTable .LoggingTable__timestampCell,
  .LoggingTable .LoggingTable__componentCell .LoggingTable__componentName {
    @extend .caption;
  }
}

